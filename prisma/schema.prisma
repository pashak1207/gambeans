generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id                Int          @default(autoincrement()) @db.UnsignedInt @unique
  name              String?
  phone             String
  role              Users_role   @default(USER)
  status            User_status  @default(ACTIVE)
  DOB               DateTime?
  avatar            String
  daily_code        String?
  prizes            User_prize[]
  visits            Visits[]  
  cafe              Cafes        @relation(fields: [cafe_id], references: [id])
  cafe_id           Int          @db.UnsignedInt
  verification_code String
  updated_at        DateTime     @updatedAt
  created_at        DateTime     @default(now())

  @@id([phone, cafe_id])
}

model Cafes {
  id            Int           @id @default(autoincrement()) @db.UnsignedInt
  name          String
  email         String        @unique
  address       String?
  logo          String
  color         String
  send_phone    String        @unique
  ftw           Int           @db.UnsignedInt
  link_eng      String?
  link_heb      String?
  contact_phone String?
  contact_name  String?
  prizes        Prizes[]
  visits        Visits[]
  users         Users[]
  daily_code    String
  created_at    DateTime      @default(now())
}

model Visits {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  user       Users    @relation(fields: [user_id], references: [id])
  user_id    Int      @db.UnsignedInt
  cafe       Cafes    @relation(fields: [cafe_id], references: [id])
  cafe_id    Int      @db.UnsignedInt
  visit_date DateTime @default(now())
}

model User_prize {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  prize      Prizes   @relation(fields: [prize_id], references: [id])
  prize_id   Int      @db.UnsignedInt
  used       DateTime?
  opened     DateTime?
  is_won     Boolean  @default(false)
  user       Users    @relation(fields: [user_id], references: [id])
  user_id    Int      @db.UnsignedInt
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  expires_at DateTime?
}

model Prizes {
  id          Int          @id @default(autoincrement())  @db.UnsignedInt
  cafe        Cafes        @relation(fields: [cafe_id], references: [id])
  cafe_id     Int          @db.UnsignedInt
  max_amount  Int          @db.UnsignedInt
  text        String
  image       String
  step_image  String
  type        Prize_type
  cost        Float
  revenue     Float       
  probability Float
  users       User_prize[]
  is_active   Boolean      @default(false)
  expires_at  Int          @default(1)
  created_at  DateTime     @default(now())
}

enum Users_role {
  ADMIN
  SUPERADMIN
  USER
}

enum User_status {
  ACTIVE
  BLOCKED
}

enum Prize_type {
  SCRATCH
  SLOT
  FIRST
  FREE
}
